name: Build APK with Buildozer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          zip unzip openjdk-17-jdk \
          python3-pip libgl1-mesa-dev \
          libgles2-mesa-dev xclip

        pip install --upgrade pip
        pip install buildozer cython

    - name: Install Android SDK manually
      run: |
        mkdir -p "$HOME/android-sdk/cmdline-tools"
        cd "$HOME/android-sdk/cmdline-tools"
        curl -o tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip tools.zip -d latest
        rm tools.zip

    - name: Accept Android SDK Licenses
      run: yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Install Android SDK Build Tools and platform-tools
      run: |
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-30" \
          "build-tools;30.0.3"

    - name: Set environment variables
      run: |
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        echo "$HOME/android-sdk/build-tools/30.0.3" >> $GITHUB_PATH

    - name: Initialize Buildozer (if missing)
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

    - name: Build APK
      run: |
        buildozer android debug
